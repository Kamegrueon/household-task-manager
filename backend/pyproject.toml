[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["AnagumaReonKK <niwaniwaniwaniwatori.gairuze@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.5"
fastapi = "^0.115.0"
uvicorn = "^0.31.1"
supabase = "^2.9.0"
pyjwt = "^2.9.0"
python-dotenv = "^1.0.1"
sqlalchemy = "^2.0.35"
pydantic-settings = "^2.5.2"
psycopg2 = "^2.9.9"
pydantic = {extras = ["email"], version = "^2.9.2"}
python-jose = "^3.3.0"
passlib = "^1.7.4"
bcrypt = "4.0.1"
cffi = "1.15.0"
python-multipart = "^0.0.12"
alembic = "^1.13.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
pre-commit = "^4.0.1"
black = "^24.10.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
# チェックするエラーの種類
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
# 除外するエラーの種類
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "B904", # raise ... from ... になっていない場合のエラーを無視
]

# ファイルごとのエラー除外
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# isort の設定
[tool.ruff.lint.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.ruff.lint.pyupgrade]
# Python3.8互換のための設定
keep-runtime-typing = true

[tool.pre-commit]
config = "backend/.pre-commit-config.yaml"